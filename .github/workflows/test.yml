name: QA Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  api-tests:
    name: Backend API Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run API tests with coverage
      run: |
        cd backend
        npm run test:coverage
        
    - name: Upload API coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: api
        name: api-coverage
        
    - name: Upload API coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-coverage-report
        path: backend/coverage/
        retention-days: 7

  ui-tests:
    name: Frontend UI Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install root dependencies
      run: npm ci
      
    - name: Install all project dependencies
      run: npm run install:all
      
    - name: Install Playwright browsers
      run: |
        cd frontend
        npx playwright install --with-deps
        
    - name: Start backend server
      run: |
        cd backend
        npm start &
        sleep 10
        
    - name: Start frontend server
      run: |
        cd frontend
        npm start &
        sleep 15
        
    - name: Wait for servers to be ready
      run: |
        npx wait-on http://localhost:5000/health --timeout 30000
        npx wait-on http://localhost:3000 --timeout 30000
        
    - name: Run UI tests
      run: |
        cd frontend
        npx playwright test
        
    - name: Upload UI test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ui-test-results
        path: |
          frontend/test-results/
          frontend/playwright-report/
        retention-days: 7

  integration-tests:
    name: Full Integration Tests
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install all dependencies
      run: npm run setup
      
    - name: Run all tests
      run: npm run test:all
      
    - name: Generate test summary
      if: always()
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### API Tests" >> $GITHUB_STEP_SUMMARY
        if [ -f "backend/coverage/coverage-summary.json" ]; then
          echo "- Coverage report generated" >> $GITHUB_STEP_SUMMARY
        else
          echo "- Coverage report not found" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### UI Tests" >> $GITHUB_STEP_SUMMARY
        if [ -d "frontend/test-results" ]; then
          echo "- Test results available" >> $GITHUB_STEP_SUMMARY
        else
          echo "- Test results not found" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Artifacts Generated:" >> $GITHUB_STEP_SUMMARY
        echo "- API Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "- UI Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- Playwright HTML Report" >> $GITHUB_STEP_SUMMARY

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [integration-tests]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm run install:all
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Deploy to Preview
      run: |
        echo "Preview deployment would happen here"
        echo "Backend API: Ready for deployment"
        echo "Frontend Build: Ready for deployment" 